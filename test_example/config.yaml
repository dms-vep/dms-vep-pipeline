# Config for analysis

# ----------------------------------------------------------------------------
# Relative paths from your top-level Snakefile to where you have the pipeline
# submodule cloned, and where you build the docs. Typically your top-level
# Snakefile will be in the root directory and paths will be `dms-vep-pipeline`
# and `./`, but in this example they are upstream from this subdirectory.
# ----------------------------------------------------------------------------
pipeline_path: ../  # typically will be `dms-vep-pipeline`
docs_path: ../  # typically will be `./`

# ----------------------------------------------------------------------------
# Details on repo, used for docs. Change this to details for your project.
# ----------------------------------------------------------------------------
github_repo: dms-vep-pipeline
github_user: jbloomlab
github_branch: main
description: Deep mutational scanning (DMS) pipeline for a viral entry protein (VEP)
year: 2022
authors: Jesse Bloom

# ----------------------------------------------------------------------------
# Parameters for analysis
# ----------------------------------------------------------------------------
# Parameters for building PacBio CCS consensuses
max_ccs_error_rate: 1.0e-4  # only keep CCS if gene/barcode error rate <= this
consensus_params:  # parameters for building PacBio consensus sequences
  max_sub_diffs: null
  max_indel_diffs: null
  max_minor_sub_frac: 0.2
  max_minor_indel_frac: 0.2
  min_support: 2

# Parameters for processing Illumina barcodes
illumina_barcode_parser_params:
  upstream: AACTCCACTAGGAACATTTCTCTCTCGAATCTAGA
  downstream: ''
  minq: 20
  upstream_mismatch: 2

# ----------------------------------------------------------------------------
# Input data to dms-vep-pipeline
# ----------------------------------------------------------------------------
# PacBio sequencing
pacbio_runs: data/PacBio_runs.csv  # PacBio sequencing data
pacbio_amplicon: data/PacBio_amplicon.gb  # Genbank file with PacBio amplicon
pacbio_amplicon_specs: data/PacBio_feature_parse_specs.yaml  # alignparse feature parsing
variant_tags:  # variant tags in PacBio amplicon, or "null" if no tags
  variant_tag5:
    variant_1: G
    variant_2: C
    wildtype: A
  variant_tag3:
    variant_1: G
    variant_2: C
    wildtype: A

# Map sequential 1, 2, numbering of gene in PacBio amplicon to the desired
# final reference numbering scheme.
site_numbering_map: data/site_numbering_map.csv

# Classify mutations into different categories, such as which ones are
# designed to be in the library.
mutation_design_classification: data/mutation_design_classification.csv

# Neutralization standard barcodes
neut_standard_barcodes: data/neutralization_standard_barcodes.csv

# Illumina barcode sequencing
barcode_runs: data/barcode_runs.csv

# ----------------------------------------------------------------------------
# Names of output directories / files
# ----------------------------------------------------------------------------
# directory with logs from running snakemake steps
logdir: results/logs

# gene sequence extracted from PacBio amplicon
gene_sequence_codon: results/gene_sequence/codon.fasta
gene_sequence_protein: results/gene_sequence/protein.fasta

# processing of PacBio CCSs to create codon-variant table
process_ccs_dir: results/process_ccs
aligned_ccs_file: results/process_ccs/CCSs_aligned_to_amplicon.csv
nt_variants: results/variants/nt_variants.csv
codon_variants: results/variants/codon_variants.csv

# barcode sequencing
processed_barcode_runs: results/barcode_runs/processed_barcode_runs.csv
barcode_counts_dir: results/barcode_runs/counts_by_sample
barcode_counts_invalid_dir: results/barcode_runs/counts_invalid_by_sample
barcode_fates_dir: results/barcode_runs/fates_by_sample

# variant counts
variant_counts: results/variant_counts/variant_counts.csv
