"""Top-level ``snakemake`` file that runs analysis."""


import os


configfile: "config.yaml"


# include `dms-vep-pipeline` pipeline Snakemake file
include: os.path.join(config["pipeline_path"], "pipeline.smk")


rule all:
    input:
        variant_count_files,
        rules.check_adequate_variant_counts.output.passed,
        # antibody escape output
        antibody_escape_files,
        # functional effects of mutations output
        (
            [config["muteffects_observed"], config["muteffects_latent"]]
            if len(func_selections)
            else []
        ),
        # HTML documentation output
        config["docs"],


# Arbitrary other rules should be added here
rule spatial_distances:
    """Get spatial distances from PDB."""
    output:
        csv=config["spatial_distances"],
        pdb=os.path.splitext(config["spatial_distances"])[0] + ".pdb",
    params:
        url=lambda _, output: os.path.join(
            "https://files.rcsb.org/download",
            os.path.splitext(os.path.basename(output.csv))[0] + ".pdb",
        ),
        target_chains=["A", "B", "C"],
    log:
        log=os.path.join(config["logdir"], "spatial_distances.txt"),
    conda:
        os.path.join(config["pipeline_path"], "environment.yml")
    script:
        "scripts/spatial_distances.py"


# Add any extra data/results files for docs with name: file
extra_data_files = {}

# Add any extra HTML documents to display here with name: file
extra_html_docs = {}

# If you add rules with "nb" output that have wildcards, specify the rule name
# and subindex titles for the wildcards as in "docs.smk" for `nb_rule_wildcards`
# and `subindex_titles`
extra_nb_rule_wildcards = {}
extra_subindex_titles = {}


# include `dms-vep-pipeline` docs building Snakemake file
include: os.path.join(config["pipeline_path"], "docs.smk")
